""" ----- регулярные выражения ----- """

"""задача
Дана произвольная строка
Написать регулярное выражение для поиска в строке серии и номера паспорта 
Допускается только запись паспорта из предложенных ниже : 
00 00 000000
или 00 00 000 000
или 00-00-000-000
или 00-00-000000
на месте 0 может стоять любая цифра 
Программа должны вывести кол-во валидных значений и показать их в консоле"""
import re
test_str = """25-25-789654
54 24 101101
25 52 789 777
25-25-33-33-58
18-18-185-189
17 17 189 18
15-25 559595
17 17-282896
14 14 896-879
19-28-298-987
88-78-875469"""
reg_ex = r"\d{2}[-]\d{2}[-]\d{3}[-]{0,1}\d{3}[-]{0,1}|\d{2}[ ]\d{2}[ ]\d{3}[ ]{0,1}\d{3}[ ]{0,1}"
result = re.findall(reg_ex, test_str) 
print(result, f"Количество совпадений: {len(result)}", sep="\n")

"""задача
Дана произвольная строка  
написать регулярное выражение для определения номера автомобиля. 
Допускается только такая запись номера автомобиля А000АА
А-любая буква(латиница)
0-любая цифра
Программа должны вывести кол-во валидных значений и показать их в консоле"""
import re
test_str = """D987AD
a789aa
F899QD
A78AD
F789A
F8962FA
ADS78Q
FW85Q
G789QQ
P234QA
234PR
T123MV
p)*&23
OWF12
Q789pO
I876FA"""
reg_ex = r"[A-Z]{1}\d{3}[A-Z]{2}"
result = re.findall(reg_ex, test_str) 
print(result, f"Количество совпадений: {len(result)}", sep="\n")

"""задача
Написать регулярное выражение для определения валидных логинов. 
Валидными считаются те логины, которые удовлетворяют следующим условиям:
●	содержится минимум 1 букву латинского алфавита и не содержится буквы других алфавитов
●	содержит  минимум 2 цифры
●	в конце имени обязательно нужно указывать “login”
примеры валидных значений
	n12login
	name22login
	2name2login
и т.д.
Программа должны вывести кол-во валидных значений и показать их в консоле"""
# Очень не уверена в решении данной задачи, но уж очень хотелось решить. Минус мозг.
import re
test_str = """n12login
name22login
2name2login
11asdaslogin
11ll15logi
a1f2alogin
sdgs1asdlogin
jggyhlogin"""
reg_ex = r"(?=(?:[^a-z]*[a-z]){1,}[^a-z]*\Z)(?=(?:\D*\d){2,}\D*\Z)[A-Za-z\d]+login"
result = re.findall(reg_ex, test_str) 
print(result, f"Количество совпадений: {len(result)}", sep="\n")

""" ----- функции ----- """

"""задача
используя модуль turtle и создав функцию рисования квадрата, 
решите следующую задачу: 25  одинаковых квадратиков в одном большом квадрате"""
from turtle import *
from time import sleep
def drow_square(a): # a - сторона квадрата
    for i in range(4):
        forward (a)
        left (90)
for a in range(5):
    for b in range(5):
            drow_square(30)
            forward(30)
    # sleep(10)
    left (90)
    forward(30)
    left(90)
    forward(150)
    left(180)     
sleep(3)

"""задача
используя модуль turtle и создав функцию рисования квадрата, 
решите следующую задачу: квадрат с 4мя треугольниками"""
from turtle import *
from time import sleep
def drow_triangle(a):
    for i in range(3):
        forward (a)
        left (120)
for a in range(4):
    drow_triangle(50)
    forward(50)
    right(90)
sleep(3)

"""задача
используя модуль turtle и создав функцию рисования шестиугольника, 
решите следующую задачу: треугольник и 3 шестиугольника"""
from turtle import *
from time import sleep
def drow_hexagon(a):
    for i in range(6):
        forward (a)
        left (60)
for a in range(3):
    drow_hexagon(50)
    forward(50)
    right(120)
sleep(3)
