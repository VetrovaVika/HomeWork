"""задача
составьте словарь англо-русский (или любой другой словарь) 
из произвольных слов. Реализовать:
●	поиск русских слов и их значений в английском языке
●	поиск английских слов и их значений в русском языке
●	если нет совпадений, необходимо отдельно об этом сообщить 
# пользователю"""
word = input("Введите слово для перевода: ")
translit = {'привет': 'hello', 
            'красота':'beauty', 
            'улыбка':'smile',
            'снег':'snow',
            'клубника':'strawberry'}
try:
    coincidence = 0
    for i in translit:
        if i == word:
            coincidence += 1
            print(f"Перевод слова {word} это {translit[i]}")
        elif translit[i] == word:
            coincidence += 1
            print(f"Перевод слова {word} это {i}")
    if coincidence == 0:
        print("Такого слова нет в словаре")
except:
    print("Что-то пошло не так")

"""задача
составьте словарь стран и городов каждой страны(Для каждой страны 
минимум два города должно быть, иначе страна и город должна совпадать 
(например {Люксембург: [Люксембург]})). Для каждого города укажите, 
в какой стране он находится. Если город и страна совпадают напечатайте 
“Город-государство : название города-государства”"""
country = {"Россия": ["Москва", "Санкт-Петербург", "Новосибирск"], 
           "Япония": ["Токио", "Киото"],
           "Сингапур": ["Сингапур"],
           "Германия": ["Берлин", "Мюнхен"],
           "Франция": ["Париж", "Марсель", "Бордо"],
           "Люксембург": ["Люксембург"]}
# напечатать город и в какой стране от находится, если город-государство, 
# то для него нужна отдельная печать
city_user = input("Введите город: ")
try:
    coincidence = 0
    for city_list in country:
        for city in country[city_list]:
            if city == city_user:
                if len(country[city_list]) >= 2:
                    coincidence += 1
                    print(f"Город {city_user} находится в стране {city_list}")
                elif len(country[city_list]) == 1:
                    coincidence += 1
                    print(f"{city_user} является городом-государством")
    if coincidence == 0:
        print("Такого города нет в словаре")                
except:
    print("Ой! Ошибка!")
# aaaaaaa, етить эта задача просто расплавила мои мозги... Я только её писала 3 часа D:>

"""задача
Создайте словарь всех покупателей и стоимости покупок 
(для каждого покупателя: стоимость покупки). найти для такого словаря:
●	максимальную стоимость покупки и кто совершил эту покупку
●	кол-во сделанных продаж"""
buyers = {"Nikc": 1589, "Mike": 983, "Liza": 12574, "Alisa": 12574, "Lui": 1598}
min_buyers = min(buyers.values())
if min_buyers < 0:
    print("Словарь составен неверно, стоимость покупки не может быть меньше 0")
else:
    max_buyers = max(buyers.values())
    count = 0
    summ = 0
    for k, v in buyers.items():
        if v == max_buyers:
            print(f"Покупатель {k} совершил максимальную покупку на сумму {v}")
        count += 1
        summ += v
    print(f"Всего совершено {count} покупок на сумму {summ}")

"""задача
Петя перешёл в другую школу. На уроке физкультуры ему понадобилось 
определить своё место в строю. Помогите ему это сделать.
Программа получает на вход невозрастающую последовательность 
натуральных чисел, означающих рост каждого человека в строю. 
После этого вводится число X – рост Пети. Все числа во входных данных 
натуральные и не превышают 200.
Выведите номер, под которым Петя должен встать в строй. 
Если в строю есть люди с одинаковым ростом, таким же, как у Пети, 
то он должен встать после них."""
from random import randint
height_Peter = int(input("Введите рост Пети: "))
if height_Peter < 100 or height_Peter > 200:
    print("Рост Пети может быть от 100 до 200")
else:
    height_group = []
    n = 15
    for i in range(n):
        height_group.append(randint(100, 200))
    height_group.sort(reverse=True)
    print(f"Рост группы по порядку {height_group}")
    height_order = 1 # потому что порядок в строю должен начинаться с 1
    for num in height_group:
        if num >= height_Peter:
            height_order += 1
        else:
            continue
    print(f"Петя встанет на {height_order} место в группе по росту на уроке физкультуры")







